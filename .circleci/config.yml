version: 2.1
executors:
    docker-publisher:
        environment:
            CLIENT_IMAGE: mdecker84/cc_build_client
            NGINX_IMAGE: mdecker84/cc_build_nginx
        docker:
            - image: circleci/buildpack-deps:stretch
    docker-deploy:
        docker:
            - image: circleci/python:3.6.8
jobs:
    build:
        executor: docker-publisher
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Set up docker
                command: |
                    echo  $CIRCLE_SHELL_ENV
                    if [[ $CIRCLE_SHELL_ENV == *"localbuild"* ]]; then
                        echo "This is a local build. Enabling sudo for docker"
                        echo sudo > ~/sudo
                    else
                        echo "This is not a local build. Disabling sudo for docker"
                        touch ~/sudo
                    fi
            - run:
                name: Build Docker image
                command: |
                    eval `cat ~/sudo` docker build -t $CLIENT_IMAGE:latest ./client
                    eval `cat ~/sudo` docker build -t $NGINX_IMAGE:latest ./nginx
            - run:
                name: Archive Docker image
                command: |
                    eval `cat ~/sudo` docker save -o image-client.tar $CLIENT_IMAGE
                    eval `cat ~/sudo` docker save -o image-nginx.tar $NGINX_IMAGE
            - persist_to_workspace:
                root: .
                paths:
                    - ./image-client.tar    
                    - ./image-nginx.tar
    publish-latest:
        executor: docker-publisher
        steps:
            - attach_workspace:
                at: /tmp/workspace
            - setup_remote_docker
            - run:
                name: Load archived Docker image
                command: |
                    eval `cat ~/sudo` docker load -i /tmp/workspace/image-client.tar
                    eval `cat ~/sudo` docker load -i /tmp/workspace/image-nginx.tar
            - run:
                name: Publish Docker Image to Docker Hub
                command: |
                    echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_ID --password-stdin
                    eval `cat ~/sudo` docker push $CLIENT_IMAGE:latest
                    eval `cat ~/sudo` docker push $NGINX_IMAGE:latest

    deploy:
        executor: docker-deploy
        steps:
            - checkout
            - run: sudo chown -R circleci:circleci /usr/local/bin
            - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
            - restore_cache:
                keys:
                    - deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - run:
                name: Install awscli
                command: |
                    sudo pip install awscli --upgrade
                    sudo pip install awsebcli --upgrade
                    sudo pip install virtualenv
                    sudo pip install pipenv
            - save_cache:
                key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
                paths:
                    - ".venv"
                    - "/usr/local/bin"
                    - "/usr/local/lib/python3.6/site-packages"
            - run: 
                name: Create aws credentials
                command: |
                    chmod +x ./setup-eb.sh
                    ./setup-eb.sh
            - run:
                name: Deploying
                command: |  
                    eb use Truthandculture-env --profile prod
                    eb deploy --profile prod

workflows:
    version: 2
    build-master:
        jobs:
            - build:
                filters:
                    branches:
                        only: master
            - publish-latest:
                requires:
                    - build
                filters:
                    branches:
                        only: master
            - deploy:
                requires:
                    - publish-latest
                filters:
                    branches:
                        only: master
